# INFO: Zsh config

# Enable case-insensitive tab completion
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
autoload -Uz compinit && compinit

# Enable auto-correction
setopt CORRECT

# INFO: Zsh plugins

# Plugin Manager: Zinit
### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust
### End of Zinit's installer chunk

# Syntax Highlighting
zinit light zsh-users/zsh-syntax-highlighting

# Autosuggestions
zinit light zsh-users/zsh-autosuggestions

# Completion
zinit light zsh-users/zsh-completions

# Git Aliases
zinit snippet OMZP::git

# INFO: Aliases

# zsh
alias reload='source ~/.zshrc'

# lsd (better ls)
alias ls='lsd'
alias la='lsd --all'
alias ll='lsd --long --all'
alias tree='lsd --tree'
alias treed='lsd --tree --depth'

# bat (better cat)
alias cat='bat'
export BAT_THEME="Monokai Extended Bright"

# zoxide
alias cd='z'
alias ..='cd ..'
alias ...='cd ../..'

# pnpm
alias pn='pnpm'
alias px='pnpx'

# python
alias venv='[ -d .venv ] || python3 -m venv .venv; source .venv/bin/activate'
alias py3='python3'
alias py310='python3.10'
alias uvr='uv run python'

# lazygit
alias lg='lazygit'

# gh dash
alias ghb='gh browse'
alias ghd='gh dash'

# nvim
alias vim='nvim'
alias nvimz='nvim ~/.zshrc'

# tmux
alias tmux='tmux -f ~/.config/tmux/tmux.conf'

# posting
alias post='posting'

# fastfetch
alias fetch='fastfetch'

# sesh
alias s='sesh connect "$(sesh list -i | gum filter --limit 1 --no-sort --fuzzy --placeholder "Pick a sesh" --prompt="âš¡")"'
alias ks='tmux list-sessions 2>/dev/null | grep -q "." && tmux list-sessions -F "#{session_name}" | gum filter --limit 0 --placeholder "Pick tmux sessions to kill" --prompt="ðŸ’€ " | xargs -r -I{} tmux kill-session -t "{}" || echo "No tmux sessions to kill."'

# homebrew
alias bup='brew update && brew upgrade && brew cleanup'

# bun
alias br='bun run'

# docker
alias ds='colima start'
alias dl='lazydocker'

# repomix
alias repomix='repomix --style plain --ignore "repomix_output.txt"'

# INFO: Exports

# volta
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

# bun
[ -s "/home/dante/.bun/_bun" ] && source "/home/dante/.bun/_bun"
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"

# rust
export PATH="$HOME/.cargo/bin:$PATH"

# flutter
export PATH=$HOME/development/flutter/bin:$PATH

# point Exegol (and anything docker-py) at Colima's socket
export DOCKER_HOST="$(docker context inspect --format '{{ .Endpoints.docker.Host }}')"

# homebrew
# Add Homebrew paths to PATH
export PATH="/opt/homebrew/opt/bc/bin:/opt/homebrew/opt/coreutils/libexec/gnubin:/opt/homebrew/opt/gawk/libexec/gnubin:/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"
# Enable zsh completions for gh and glab
fpath=($fpath /opt/homebrew/share/zsh/site-functions)

# Conda Init
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/dante/opt/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/dante/opt/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/dante/opt/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/dante/opt/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# pipx
export PATH="$PATH:/Users/dante/.local/bin"

# nvim as default terminal editor
export EDITOR=nvim

# homebrew no env hints
export HOMEBREW_NO_ENV_HINTS=1

# INFO: Evals

# thefuck
eval $(thefuck --alias)

# zoxide
eval "$(zoxide init zsh)"

# Enable fzf with Zsh integration
eval "$(fzf --zsh)"

# terminal prompt (starship)
eval "$(starship init zsh)"

fetch

# bun completions
[ -s "/Users/dante/.bun/_bun" ] && source "/Users/dante/.bun/_bun"

# opam-init
[[ ! -r '/Users/dante/.opam/opam-init/init.zsh' ]] || source '/Users/dante/.opam/opam-init/init.zsh' > /dev/null 2> /dev/null
